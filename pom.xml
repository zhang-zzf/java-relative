<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <artifactId>java-relative</artifactId>

  <build>
    <plugins>
      <!-- 源码打包 -->
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
            <id>attach-sources</id>
            <phase>verify</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.1.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.0.0-M2</version>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.22.2</version>
      </plugin>
      <plugin>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <id>pre-test</id>
          </execution>
          <execution>
            <goals>
              <goal>report</goal>
            </goals>
            <id>post-test</id>
            <phase>test</phase>
          </execution>
        </executions>
        <groupId>org.jacoco</groupId>
        <version>0.8.5</version>
      </plugin>
    </plugins>

  </build>
  <dependencies>

    <!-- elasticsearch transport 5.4.3 -->
    <dependency>
      <artifactId>transport</artifactId>
      <groupId>org.elasticsearch.client</groupId>
      <version>5.4.3</version>
    </dependency>
    <dependency>
      <artifactId>log4j-core</artifactId>
      <groupId>org.apache.logging.log4j</groupId>
      <version>2.16.0</version>
    </dependency>
    <dependency>
      <artifactId>log4j-to-slf4j</artifactId>
      <groupId>org.apache.logging.log4j</groupId>
      <version>2.11.1</version>
    </dependency>

    <!-- spring-kafka -->
    <dependency>
      <artifactId>spring-kafka</artifactId>
      <groupId>org.springframework.kafka</groupId>
      <version>2.5.1.RELEASE</version>
    </dependency>
    <dependency>
      <artifactId>jackson-databind</artifactId>
      <groupId>com.fasterxml.jackson.core</groupId>
      <version>2.11.0</version>
    </dependency>

    <!-- kafka client -->
    <dependency>
      <artifactId>kafka-clients</artifactId>
      <groupId>org.apache.kafka</groupId>
      <version>2.5.0</version>
    </dependency>

    <!-- spring aop with aspectJ support -->
    <dependency>
      <artifactId>aspectjweaver</artifactId>
      <groupId>org.aspectj</groupId>
      <version>1.9.4</version>
    </dependency>
    <dependency>
      <artifactId>spring-aop</artifactId>
      <groupId>org.springframework</groupId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <artifactId>poi</artifactId>
      <groupId>org.apache.poi</groupId>
      <version>${poi.version}</version>
    </dependency>
    <dependency>
      <artifactId>poi-ooxml</artifactId>
      <groupId>org.apache.poi</groupId>
      <version>${poi.version}</version>
    </dependency>
    <dependency>
      <artifactId>caffeine</artifactId>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <version>2.8.1</version>
    </dependency>
    <!-- redis -->
    <dependency>
      <artifactId>spring-data-redis</artifactId>
      <groupId>org.springframework.data</groupId>
      <version>2.2.0.RELEASE</version>
    </dependency>
    <dependency>
      <artifactId>jedis</artifactId>
      <groupId>redis.clients</groupId>
      <scope>compile</scope>
      <type>jar</type>
      <version>3.2.0</version>
    </dependency>
    <dependency>
      <artifactId>fastjson</artifactId>
      <groupId>com.alibaba</groupId>
      <version>1.2.55</version>
    </dependency>
    <!-- embedded-redis for test -->
    <dependency>
      <artifactId>embedded-redis</artifactId>
      <groupId>com.github.kstyrc</groupId>
      <scope>test</scope>
      <version>0.6</version>
    </dependency>

    <!-- mybatis -->
    <dependency>
      <artifactId>mybatis</artifactId>
      <groupId>org.mybatis</groupId>
      <version>3.5.2</version>
    </dependency>
    <!-- mybatis-spring -->
    <dependency>
      <artifactId>mybatis-spring</artifactId>
      <groupId>org.mybatis</groupId>
      <version>2.0.2</version>
    </dependency>
    <dependency>
      <artifactId>spring-jdbc</artifactId>
      <groupId>org.springframework</groupId>
      <version>${spring.version}</version>
    </dependency>
    <!-- datasource -->
    <dependency>
      <artifactId>mysql-connector-java</artifactId>
      <groupId>mysql</groupId>
      <version>8.0.17</version>
    </dependency>

    <!-- 检验注解 -->
    <dependency>
      <artifactId>hibernate-validator</artifactId>
      <groupId>org.hibernate.validator</groupId>
      <version>6.0.17.Final</version>
    </dependency>

    <dependency>
      <artifactId>spring-context</artifactId>
      <groupId>org.springframework</groupId>
      <version>${spring.version}</version>
    </dependency>

    <!--<dependency>-->
    <!--<groupId>junit</groupId>-->
    <!--<artifactId>junit</artifactId>-->
    <!--<version>4.12</version>-->
    <!--<scope>test</scope>-->
    <!--</dependency>-->
    <dependency>
      <artifactId>mockito-core</artifactId>
      <groupId>org.mockito</groupId>
      <scope>test</scope>
      <version>2.28.2</version>
    </dependency>

    <!-- junit 5 -->
    <!-- Jupiter API and the JUnit Jupiter TestEngine implementation -->
    <dependency>
      <artifactId>junit-jupiter</artifactId>
      <groupId>org.junit.jupiter</groupId>
      <scope>test</scope>
      <version>5.5.2</version>
    </dependency>
    <!-- Jupiter API and the JUnit Jupiter TestEngine implementation -->

    <!-- JUnit 4 and the JUnit Vintage TestEngine implementation -->
    <dependency>
      <artifactId>junit</artifactId>
      <groupId>junit</groupId>
      <scope>test</scope>
      <version>4.12</version>
    </dependency>
    <dependency>
      <artifactId>junit-vintage-engine</artifactId>
      <groupId>org.junit.vintage</groupId>
      <scope>test</scope>
      <version>5.5.2</version>
    </dependency>
    <!-- JUnit 4 and the JUnit Vintage TestEngine implementation -->
    <dependency>
      <artifactId>mockito-junit-jupiter</artifactId>
      <groupId>org.mockito</groupId>
      <version>2.25.1</version>
    </dependency>
    <!-- junit 5 -->

    <dependency>
      <artifactId>assertj-core</artifactId>
      <groupId>org.assertj</groupId>
      <scope>test</scope>
      <version>3.14.0</version>
    </dependency>

    <dependency>
      <artifactId>powermock-module-junit4</artifactId>
      <groupId>org.powermock</groupId>
      <scope>test</scope>
      <version>${powermock.version}</version>
    </dependency>
    <dependency>
      <artifactId>powermock-api-mockito2</artifactId>
      <groupId>org.powermock</groupId>
      <scope>test</scope>
      <version>${powermock.version}</version>
    </dependency>
    <dependency>
      <artifactId>spring-test</artifactId>
      <groupId>org.springframework</groupId>
      <scope>test</scope>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <artifactId>h2</artifactId>
      <groupId>com.h2database</groupId>
      <scope>test</scope>
      <version>2.1.210</version>
    </dependency>
    <dependency>
      <artifactId>flyway-core</artifactId>
      <groupId>org.flywaydb</groupId>
      <scope>test</scope>
      <version>5.2.0</version>
    </dependency>


    <dependency>
      <artifactId>slf4j-api</artifactId>
      <groupId>org.slf4j</groupId>
      <version>1.7.26</version>
    </dependency>
    <dependency>
      <artifactId>logback-classic</artifactId>
      <groupId>ch.qos.logback</groupId>
      <version>1.2.3</version>
    </dependency>
    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
      <version>1.18.8</version>
    </dependency>
    <dependency>
      <artifactId>guava</artifactId>
      <groupId>com.google.guava</groupId>
      <scope>compile</scope>
      <version>28.1-jre</version>
    </dependency>
  </dependencies>
  <groupId>com.github.learn</groupId>
  <modelVersion>4.0.0</modelVersion>

  <modules>
    <module>batch-cache</module>
    <module>spring-rabbitmq</module>
    <module>spring-event-framework</module>
    <module>redis-lbs</module>
    <module>spring-data-redis-lua</module>
    <module>sentinel-demo</module>
    <module>spring-data-es</module>
    <module>java-unit-test</module>
    <module>spring-validation</module>
    <module>flow-limit</module>
    <module>java-date</module>
    <module>spring-async</module>
    <module>spring-self</module>
    <module>spring-cycle-dependency</module>
    <module>mapstruct-demo</module>
    <module>spring-retry</module>
    <module>leetcode</module>
    <module>distribute-id-generator</module>
    <module>snowflake-time</module>
    <module>java-multi-thread</module>
    <module>java-basic</module>
    <module>java-encrypt</module>
    <module>java-sftp</module>
    <module>insure-server</module>
    <module>ip-update-daemon</module>
    <module>hello-world</module>
    <module>thread-RAM-location</module>
    <module>thread-state-validate</module>
  </modules>
  <packaging>pom</packaging>

  <properties>
    <!-- maven-resources-plugin 会自动读取此配置 -->
    <maven.compiler.source>1.8</maven.compiler.source>

    <!-- maven-compiler-plugin 会自动读取此配置 -->
    <maven.compiler.target>1.8</maven.compiler.target>
    <poi.version>3.17</poi.version>

    <powermock.version>2.0.4</powermock.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spring.version>5.2.0.RELEASE</spring.version>
  </properties>

  <version>1.0-SNAPSHOT</version>
</project>
