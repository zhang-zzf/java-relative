---
# global config
spring:
  application:
    name: spring-boot-actuator.app
  jackson:
    default-property-inclusion: non_null
logging:
  level:
    root: info
  pattern:
    dateformat: HH:mm:ss
    console: '%d{HH:mm:ss} %-5p [%15.15t] %-40.40logger{39} :[%X{x-trace-id}] %m%n%wEx'
    file: '%d{yyyy-MM-dd HH:mm:ss} %-5p [%15.15t] %-40.40logger{39} :[%X{x-trace-id}] %m%n%wEx'
#
# spring-boot actuator
management:
  endpoints:
    web:
      exposure:
        # https://docs.spring.io/spring-boot/reference/actuator/endpoints.html
        include: 'health,info,env,caches,auditevents,prometheus,threaddump,scheduledtasks,mappings,metrics,loggers'
  endpoint:
    env:
      # For HTTP endpoints, a user is considered to be authorized
      # if they have authenticated and have the roles configured by the endpoint?s roles property.
      # By default, any authenticated user is authorized
      show-values: WHEN_AUTHORIZED
  metrics:
    tags:
      application: ${spring.application.name}
# spring-boot actuator Micrometer Observation Annotations support
# To enable scanning of metrics and tracing annotations like @Timed, @Counted, @MeterTag and @NewSpan annotations,
# you will need to set the management.observations.annotations.enabled property to true
micrometer:
  observations:
    annotations:
      enabled: true
# user authorities
user:
  authority:
    configs:
      15618536513:
        - ROLE_ENDPOINT_ADMIN
        - ROLE_ADMIN
      18121127912:
        - ROLE_ADMIN
      17612156408:
        - ROLE_ADMIN

---
# rpc-http module config
server:
  port: 8080

---
# repo module config
spring:
  datasource:
    hikari:
      iot-card:
        maximum-pool-size: 4
        jdbc-url: jdbc:mysql://localhost:3306/iot_card
        username: root
        password: test
        driver-class-name: com.mysql.cj.jdbc.Driver
      my-db:
        maximum-pool-size: 4
        jdbc-url: jdbc:mysql://localhost:3307/my_db
        username: root
        password: test
        driver-class-name: com.mysql.cj.jdbc.Driver


---
# prod config
spring:
  config:
    activate:
      on-profile: [ prod ]

logging:
  level:
    root: info
  file:
    name: logs/info.log
  logback:
    rollingpolicy:
      max-file-size: 32MB
      total-size-cap: 8192MB
      max-history: 256
  pattern:
    dateformat: yyyy-MM-dd HH:mm:ss
